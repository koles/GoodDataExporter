= GoodData Exporter

== Usage

The tool reads from a source GoodData project and modify a target GoodData project. It can do many tricks depending on
the command given. See the commands supported today below.

<tt>gdci \[options\] command</tt>

=== Commands

*show-multiple-labels* - lists all attributes with multiple labels

*export* - exports specified identifiers (e.g. export ['adyD7xEmdhTx', 'agEEuYDOefRs', 'anANdK89eBKU'])

*import* - imports specified identifiers (e.g. export ['adyD7xEmdhTx', 'agEEuYDOefRs', 'anANdK89eBKU'])

*drop* - drops specified identifiers (e.g. drop ['adyD7xEmdhTx', 'agEEuYDOefRs', 'anANdK89eBKU'])

*drop-all* metrics | reports | projectDashboards - drops all instances of a specific object type

=== Options

-h, --help:
   show help

<b>--dir [output-directory], -d [output-directory]</b> - Directory where the export/import stores/retrieves metadata objects.

<b>--username [gooddata-username], -u [gooddata-username]</b> - Valid GoodData username. You can also store the username in the .gooddata JSON file located in the current directory,
  script directory, or your home directory. Example: {'username'':'you@gooddata.com', 'password':'password'}

<b>--password [gooddata-password], -u [gooddata-password]</b> - Valid GoodData password. You can also store the password in the .gooddata JSON file located in the current directory,
  script directory, or your home directory. Example: {'username'':'you@gooddata.com', 'password':'password'}

<b>--source [source-project], -s [source-project]</b> - An existing GoodData project where the metadata objects will be retrieved from.

<b>--target [target-project], -t [target-project]</b> - An existing GoodData project where the metadata objects will be stored.

<b>--overwrite, -o</b> - Import overwrites existing objects. Default is false.

<b>--labels [attribute-primary-labels], -l [attribute-primary-labels]</b> - Ruby hash that identifies the primary label for each attribute that has multiple labels. The primary label must
  uniquely identify every attribute element. (e.g. {'attr.user.userid'=>'label.user.userid', 'attr.account.id'=>'label.account.id'}

== Known Limitations

* The *export* command only exports the last report definition for each report. So all historical versions of the report are discarded.
* The *export* command doesn't export Mandatory User Filters  (MUFs) and variable answers (specific variable values for different users). It only exports the variable's default values.
* It still contains some bugs - report them in GitHub[https://github.com/zsvoboda/GoodDataExporter/issues]

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself we can ignore when we pull)
* Send us a pull request. Bonus points for topic branches.

== Credits

This project is developed and maintained by Zdenek Svoboda [ mailto:zd@gooddata.com / {@zsvoboda}[http:/twitter.com/zsvoboda] ]

== Copyright

Copyright (c) 2010 - 2011 GoodData Corporation. See LICENSE for details.